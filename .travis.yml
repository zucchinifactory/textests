language: generic
script:
  - |
    
    echo "Print debug information"
    printenv
    
    echo "Install Go 1.8.5"
    export GOFILE=go1.8.5.linux-amd64.tar.gz
    wget -q https://redirector.gvt1.com/edgedl/go/${GOFILE}
    if [ -n "$GOROOT" ]
    then
      echo "Target directory $GOROOT"
      sudo rm -rf $GOROOT
      sudo mkdir -p $GOROOT
      sudo tar -C $GOROOT --strip-components=1 -xzf ${GOFILE}
    else
      echo "Target directory /usr/local/go"
      sudo tar -C /usr/local -xzf ${GOFILE}
      export PATH=$PATH:/usr/local/go/bin
    fi
    go version
    
    echo "Install GitHub CLI tool hub"
    git clone https://github.com/github/hub.git
    cd hub
    ./script/build
    export PATH=$PATH:$(pwd)/bin
    cd ..
    hub version
    
    echo "Install Travis CI CLI tool travis"
    gem install travis
    travis version
    travis login --org --github-token "$GITHUB_TOKEN"
    
    if [ -n "$TRAVIS_TAG" ]
    then
      echo "A tag has already been assigned to this build: $TRAVIS_TAG"
      {
        hub release show "$TRAVIS_TAG"
      } && {
        echo "There seems to already exist a release for this tag"
        echo "Cancel job, because building isn't necessary"
        travis cancel "$TRAVIS_BUILD_NUMBER"
        sleep infinity
      }
      echo "No release has been found for this tag"
    fi
    
    echo "Install dependencies for building via make"
    sudo apt-get -qq update
    sudo apt-get install -qq -y texlive-latex-extra texlive-fonts-recommended texlive-fonts-extra latexmk
    
    if [ "$TRAVIS_PULL_REQUEST" != "false" ]
    then
      echo "This build has been triggered by a pull request"
      echo "Run make"
      make
      echo "Done"
      exit 0
    fi
    
    if [ -z "$TRAVIS_TAG" ]
    then
      echo "This build doesn't have an assigned tag yet"
      echo "Generate tag name from SHA-1 hash, because the name should be unique as well as different from branch name"
      export SHA1HASH=$(echo -n "${TRAVIS_BRANCH}" | sha1sum)
      export TRAVIS_TAG=${TRAVIS_BRANCH}-tag-${SHA1HASH:0:40}
      echo "Tag name has been set to: $TRAVIS_TAG"
      echo "Try to delete an existing former release for this tag name (This is allowed to fail if there is no former release)"
      {
        hub release delete "${TRAVIS_TAG}"
      }
      echo "Set git user email and name"
      git config --global user.email "deploy@travis-ci.org"
      git config --global user.name "Deployment Bot (from Travis CI)"
      echo "Try to remove existing old tag with the same tag name, because it is linked to the wrong commit (This is allowed to fail if this is the first time this tag name is being used)"
      {
        git tag -d "${TRAVIS_TAG}"
        git push -d "https://${GITHUB_TOKEN}@github.com/${TRAVIS_REPO_SLUG}" "${TRAVIS_TAG}"
      }
      echo "Create tag with the generated tag name"
      git tag -a -m "This tag has been auto-generated by Travis CI build #${TRAVIS_BUILD_NUMBER}." "${TRAVIS_TAG}"
      git push "https://${GITHUB_TOKEN}@github.com/${TRAVIS_REPO_SLUG}" "${TRAVIS_TAG}"
    fi
    
    echo "Run make"
    make
    
    echo "Create a release for the tag ${TRAVIS_TAG}"
    hub release create --prerelease -m ${TRAVIS_BRANCH}$'\n\n'"This release has been auto-generated by Travis CI build #${TRAVIS_BUILD_NUMBER}." -a "main.pdf" "${TRAVIS_TAG}"
    
    echo "Done"
    exit 0
