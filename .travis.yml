language: generic
script:
  - sudo apt-get -qq update
  - sudo apt-get install -qq -y texlive-latex-extra texlive-fonts-recommended texlive-fonts-extra latexmk
  - make
  - |
    echo "Installing Go 1.8.5"
    export GOFILE=go1.8.5.linux-amd64.tar.gz
    wget -q https://redirector.gvt1.com/edgedl/go/${GOFILE}
    if [ "$GOROOT" ] ; then
      echo "Target directory $GOROOT"
      sudo rm -rf $GOROOT
      sudo mkdir -p $GOROOT
      sudo tar -C $GOROOT --strip-components=1 -xzf ${GOFILE}
    else
      echo "Target directory /usr/local/go"
      sudo tar -C /usr/local -xzf ${GOFILE}
      export PATH=$PATH:/usr/local/go/bin
    fi
    go version
  - |
    echo "Building GitHub CLI hub from latest source files"
    git clone https://github.com/github/hub.git
    cd hub
    ./script/build
    export PATH=$PATH:$(pwd)/bin
    cd ..
    hub version
  - |
    echo "Debug branch: ${TRAVIS_BRANCH}"
    echo "Debug tag: ${TRAVIS_TAG}"
    echo "Debug reposlug: ${TRAVIS_REPO_SLUG}"
    echo "Uploading release"
    {
      echo "Creating tag to make sure it exists"
      git config --global user.email "deploy@travis-ci.org"
      git config --global user.name "Deployment Bot (from Travis CI)"
      git tag -a -m "none [ci skip]" "${TRAVIS_BRANCH}"
      git push "https://${GITHUB_TOKEN}@github.com/${TRAVIS_REPO_SLUG}" "${TRAVIS_BRANCH}"
    }
    {
      echo "Deleting former release if necessary"
      hub release delete "${TRAVIS_BRANCH}"
    }
    echo "Creating new release"
    hub release create --prerelease -m ${TRAVIS_BRANCH}$'\n\n[ci skip]' -t "${TRAVIS_BRANCH}" -a "main.pdf" "${TRAVIS_BRANCH}"
